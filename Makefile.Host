#******* ADD for Archive record support Albert ****************
# STRIP_HISTORY is StripHistoryAR+ArR.c StripHistoryLANL.cc StripHistoryNULL.c 
# ARCHIVER_CALL (CAR,AAPI,NONE)
# USE_ARCHIVE_RECORD
#       if IOCs support Archive record (History cache at IOC)
#	more recent archive data coming from IOC more older data
#	comming from Unix Archiver
# 
#first you have to choose STRIP_HISTORY:
#StripHistoryNULL.c ---- no history at all.
#StripHistoryLANL.cc --- Kay Kazemir (summer 2000) (not so strong) codes
#StripHistoryAR+ArR.c -- More robust :) (current version from DESY) 
#
#Second 2 variables working only with StripHistoryAR+ArR.c
# ARCHIVER_CALL 2 nontrivial situations:
# a) CAR -- local request for all history data without any reductions
#           good enough but please note that data for one hour can have 1000000
#           points!
# b) AAPI -- network request with data reductions (average, sharp,raw,splines) 
#         -- better than local, but need to start AAPI-server. 
# c) NONE no history if noUSE_ARCHIVE_RECORD , short history otherwise
#
# USE_ARCHIVE_RECORD
#     if you choose YES more recent archive data will be coming from 
#     IOC-cache.
# 

TOP = ../../..
include $(TOP)/config/CONFIG_EXTENSIONS

# ==========================================================================
# Options
# ==========================================================================

STRIP_HISTORY      = StripHistoryAR+ArR.c
ARCHIVER_CALL      = NONE
USE_ARCHIVE_RECORD = NO

ifdef WIN32
HAVE_XPM        = NO
else
HAVE_XPM	= YES
endif
HAVE_XMU	= YES

#PURIFY = YES
PURIFY_FLAGS = -first-only -chain-length=26

CMPLR 		= STRICT

# When committed, HOST_OPT should be undefined.  Use for debugging.
ifdef WIN32
# HOST_OPT = NO
else
# HOST_OPT = NO
endif
ifeq ($(HOST_OPT),NO)
  ifeq ($(ANSI),ACC)
    ifeq ($(OS_CLASS),solaris)
      USR_CFLAGS += -xsb
    endif
  endif
endif

#Temporary
#ifdef WIN32
#USR_CFLAGS += -P
#endif

STRIP_DAQ	= StripCA.c
#STRIP_HISTORY	= StripHistoryNULL.c
USE_CLUES	= YES
USE_SDDS	= YES

ifeq ($(STRIP_DAQ),StripCDEV.cc)
  USE_CDEV	= YES
endif

# Note that StripTool will ding without explanation on startup if
# STRIP_CONFIGFILE_DIR is invalid.  If STRIP_CONFIGFILE_DIR is not
# defined here, then the value in StripDefines.h will be used.
#STRIP_CONFIGFILE_DIR=\"/applic/stripTool\"

# WIN32
WIN32_RUNTIME=MD
USR_CFLAGS_WIN32 += /DWIN32 /D_WINDOWS
USR_LDFLAGS_WIN32 += /SUBSYSTEM:WINDOWS
USR_LIBS_WIN32 += $(EXCEED_XLIBS)
USR_CFLAGS_WIN32 += $(EXCEED_CFLAGS)

# ==========================================================================
# Site-specific defines
# ==========================================================================
#USR_CPPFLAGS += -DSTRIP_PRINTER_NAME=\"mcc104c\"
#USR_CPPFLAGS += -DSTRIP_PRINTER_DEVICE=\"pjetx\"
#USR_CPPFLAGS += -DSTRIP_SITE_DEFAULTS_FILE=\"/cs/op/lib/stripTool/.StripToolrc\"

# ==========================================================================
# Sources
# ==========================================================================
SRCS		+= $(STRIP_HISTORY)
SRCS		+= StripConfig.c
SRCS		+= StripCurve.c
SRCS		+= Strip.c
SRCS		+= StripDialog.c
SRCS		+= StripDataSource.c
SRCS		+= StripGraph.c
SRCS		+= StripMisc.c
SRCS		+= cColorManager.c
SRCS		+= ColorDialog.c
SRCS		+= StripTool.c
SRCS		+= $(STRIP_DAQ)
SRCS		+= jlAxis.c
SRCS		+= jlLegend.c
SRCS		+= ComboBox.c
SRCS		+= FastLabel.c
SRCS		+= Tabs.c
SRCS		+= x_rotate.c
SRCS		+= rotated.c
SRCS		+= browserHelp.c

ifeq ($(USE_CLUES), YES)
  SRCS		+= LiteClue.c
endif

# if any of the source modules are C++, then we need the
# C++ version of main
ifneq ($(findstring .cc, $(SRCS)),)
  SRCS		+= main_+.cc
else
  SRCS		+= main_c.c
endif
SRCS		+= $(MAIN)

ifeq ($(STRIP_HISTORY), StripHistoryAR+ArR.c)
  SRCS		+= getHistory.c
  ifeq ($(USE_ARCHIVE_RECORD), YES)
	USR_CFLAGS	+= -DSTRIP_HISTORY	
	SRCS		+= getArchiveRecord.c
        USR_CFLAGS      += -DUSE_ARCHIVE_RECORD
  endif	
  ifeq ($(ARCHIVER_CALL), CAR)
	USR_CFLAGS	+= -DUSE_CAR
	HISTORY_API	= CAR
        USR_CFLAGS	+= -DSTRIP_HISTORY
	SRCS		+= StripHistoryLANLmodif.cc
  endif	
  ifeq ($(ARCHIVER_CALL), AAPI)
	SRCS		+= get_AAPI_data.c
	USR_CFLAGS	+= -DSTRIP_HISTORY
	USR_CFLAGS	+= -DUSE_AAPI
        USR_LDLIBS      +=  -lAAPI_client  -lAAPI_common
  endif
  ifeq ($(ARCHIVER_CALL), NONE)
	USR_CFLAGS	+= -DNO_ARCHIVER_CALL
  endif		
endif

USR_INCLUDES = -I$(MOTIF_INC) -I$(X11_INC)

# ==========================================================================
# Preprocessor Flags
# ==========================================================================
ifneq ($(STRIP_CONFIGFILE_DIR),)
  USR_CPPFLAGS 	+= -DSTRIP_CONFIGFILE_DIR=$(STRIP_CONFIGFILE_DIR)
endif

USR_CPPFLAGS 	+= -DUSE_MOTIF
#USR_CPPFLAGS	+= -DDESY_PRINT # use xwpick instead of xwd 

ifeq ($(USE_CLUES), YES)
  USR_CPPFLAGS	+= -DUSE_CLUES
endif

ifeq ($(HAVE_XPM), YES)
  USR_CPPFLAGS	+= -DUSE_XPM
endif

ifeq ($(HAVE_XMU), YES)
  USR_CPPFLAGS	+= -DUSE_XMU
endif

ifeq ($(HISTORY_API), CAR)
#  USR_INCLUDES		+= -I$(CAR_DIR)/include
USR_INCLUDES		+= -I$(EPICS)/extensions/include 
USR_INCLUDES		+= -I$(EPICS)/base/src/ca/
  ifeq ($(CCC), aCC)
    USR_INCLUDES	+= -I$(CAR_DIR)/include/hp
  endif
endif

ifeq ($(THREADED), YES)
  ifeq ($(CCC), aCC)
    USR_CFLAGS		+= $(cc_THREAD_FLAGS)
    USR_CXXFLAGS	+= $(aCC_THREAD_FLAGS)
    THREAD_LIB		= $(hp10_THREAD_LIB)
  endif
endif

ifeq ($(USE_CDEV), YES)
  USR_INCLUDES		+= -I$(CDEV_INC)
  USR_CPPFLAGS		+= -DUSE_CDEV
endif

ifeq ($(USE_SDDS), YES)
  USR_CPPFLAGS		+= -DUSE_SDDS
endif

# ==========================================================================
# Libraries
# ==========================================================================
ifeq ($(HISTORY_API), CAR)
#  PROD_LIBS += ChanArchIO Tools
  USR_LIBS_DEFAULT += ChanArchIO Tools ca Com pthread posix4
#  USR_LDFLAGS += -L$(EPICS)/extensions/lib/$(T_A)
endif

ifeq ($(HAVE_XMU), YES)
#  PROD_LIBS += Xmu
  USR_LIBS_DEFAULT += Xmu
#  USR_LDFLAGS += -L$(XMU_LIB)
  Xmu_DIR = $(X11_LIB)
endif

ifeq ($(HAVE_XPM), YES)
#  PROD_LIBS += Xpm
  USR_LIBS_DEFAULT += Xpm
#  USR_LDFLAGS += -L$(XPM_LIB)
  Xpm_DIR = $(XPM_LIB)
endif

# Default library locations
# Use these definitions and implement them in the appropriate
# CONFIG_SITE.xxx rather than hard-coding them here.
#PROD_LIBS += Xm Xt X11
USR_LIBS_DEFAULT += Xm Xt X11
Xm_DIR = $(MOTIF_LIB)
Xt_DIR = $(X11_LIB)
X11_DIR = $(X11_LIB)
ifeq ($(MOTIF_VERSION),2)
  USR_LIBS += Xext Xp
  Xp_DIR = $(X11_LIB)
  Xext_DIR = $(X11_LIB)
endif

ifeq ($(USE_CDEV), YES)
  USR_LIBS += cdev
endif

ifeq ($(USE_SDDS), YES)
  SYS_PROD_LIBS_solaris += sunmath
  USR_LIBS += SDDS1 namelist rpnlib mdblib $(ZLIB_PROD_LIB)
  SDDS1_DIR = $(EPICS_EXTENSIONS_LIB)
  namelist_DIR = $(EPICS_EXTENSIONS_LIB)
  rpnlib_DIR = $(EPICS_EXTENSIONS_LIB)
  mdblib_DIR = $(EPICS_EXTENSIONS_LIB)
endif

USR_LIBS += ca Com
USR_LIBS += $(THREAD_LIB)

# ==========================================================================
# WIN32 Resources
# ==========================================================================
RCS_WIN32 += StripTool.rc

# ==========================================================================
# Product
# ==========================================================================
PROD := StripTool

# ==========================================================================
# Rules
# ==========================================================================
include $(TOP)/config/RULES.Host


../main_+.cc: main_c.c
	$(CP) $< $@

StripTool.res:../StripTool.ico

# ==========================================================================
# Debugging (Do gnumake xxxx in O.whatever directory)
# ==========================================================================
xxxx:
	@echo STRIP_CONFIGFILE_DIR: $(STRIP_CONFIGFILE_DIR)
	@echo EPICS_EXTENSIONS_LIB: $(EPICS_EXTENSIONS_LIB)
	@echo EPICS_EXTENSIONS_INCLUDE: $(EPICS_EXTENSIONS_INCLUDE)

# **************************** Emacs Editing Sequences *****************
# Local Variables:
# mode: makefile
# End:
